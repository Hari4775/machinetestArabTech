{"ast":null,"code":"var _jsxFileName = \"C:\\\\machine test\\\\ARAB INDUSTRY\\\\client\\\\src\\\\Components\\\\ContentData\\\\Pai.jsx\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react'\n// import { TEChart } from \"tw-elements-react\";\n\n// const Pai = () => {\n//   const [categoryData,setCategoryData] = useState([]);\n//   console.log(categoryData,\"category data\")\n//   const fetchdata= async()=> {\n//    try{\n//          const response=await axios.get(\"http://localhost:3001/api/pie-chart\")\n//           if(response){\n//             setCategoryData(response?.data)\n//           }\n//    }\n//    catch(err){\n//     console.log(err,\"errror fetching data\")\n//    }\n//   };\n\n//   useEffect(()=>{\n//     fetchdata()\n//   },[])\n//   return (\n//     <div className='bg-white ml-8 rounded-l-md rounded-r-md w-2/5 '>\n\n// <TEChart\n//         type=\"pie\"\n//         data={{\n//           labels: categoryData?.map(item => item.label),\n//           datasets: [\n//             {\n//               label: \"Traffic\",\n//               data: categoryData?.map(item => item?.value),\n//               backgroundColor: [\n//                 \"rgba(34,139,34)\",\n//                 \"rgba(60,179,113)\",\n//                 \"rgba(183, 244, 216)\",\n//                 \"rgba(173,223,173)\",\n//                 \"rgba(46,139,87)\",\n//               ],\n//             },\n//           ],\n//         }}\n//         options={{\n//           legend: {\n//             position: \"left\",\n//             align: \"start\",\n//             labels: {\n//               padding: 20, \n//               padding:30,\n\n//               // Adjust the padding if needed\n//             },\n//           },\n//         }}\n//       />    </div>\n//   )\n// }\n\n// export default Pai\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { TEChart } from \"tw-elements-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pai = () => {\n  _s();\n  const [categoryData, setCategoryData] = useState([]);\n  const fetchdata = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/pie-chart\");\n      if (response) {\n        setCategoryData(response === null || response === void 0 ? void 0 : response.data);\n      }\n    } catch (err) {\n      console.log(err, \"error fetching data\");\n    }\n  };\n  useEffect(() => {\n    fetchdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white  rounded-l-md rounded-r-md  shadow-lg h-full\",\n    children: /*#__PURE__*/_jsxDEV(TEChart, {\n      height: \"92%\",\n      type: \"pie\",\n      data: {\n        labels: categoryData === null || categoryData === void 0 ? void 0 : categoryData.map(item => item.label),\n        datasets: [{\n          label: \"Traffic\",\n          data: categoryData === null || categoryData === void 0 ? void 0 : categoryData.map(item => item === null || item === void 0 ? void 0 : item.value),\n          backgroundColor: [\"rgba(34,139,34)\", \"rgba(60,179,113)\", \"rgba(183, 244, 216)\", \"rgba(173,223,173)\", \"rgba(46,139,87)\"]\n        }]\n      },\n      options: {\n        legend: {\n          position: \"left\",\n          align: \"start\",\n          labels: {}\n        },\n        height: 300\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Pai, \"AgpCcAGdwhA7aUwJaPipC4+8sDU=\");\n_c = Pai;\nexport default Pai;\nvar _c;\n$RefreshReg$(_c, \"Pai\");","map":{"version":3,"names":["axios","React","useEffect","useState","TEChart","jsxDEV","_jsxDEV","Pai","_s","categoryData","setCategoryData","fetchdata","response","get","data","err","console","log","className","children","height","type","labels","map","item","label","datasets","value","backgroundColor","options","legend","position","align","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/machine test/ARAB INDUSTRY/client/src/Components/ContentData/Pai.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react'\r\n// import { TEChart } from \"tw-elements-react\";\r\n\r\n// const Pai = () => {\r\n//   const [categoryData,setCategoryData] = useState([]);\r\n//   console.log(categoryData,\"category data\")\r\n//   const fetchdata= async()=> {\r\n//    try{\r\n//          const response=await axios.get(\"http://localhost:3001/api/pie-chart\")\r\n//           if(response){\r\n//             setCategoryData(response?.data)\r\n//           }\r\n//    }\r\n//    catch(err){\r\n//     console.log(err,\"errror fetching data\")\r\n//    }\r\n//   };\r\n\r\n//   useEffect(()=>{\r\n//     fetchdata()\r\n//   },[])\r\n//   return (\r\n//     <div className='bg-white ml-8 rounded-l-md rounded-r-md w-2/5 '>\r\n\r\n// <TEChart\r\n//         type=\"pie\"\r\n//         data={{\r\n//           labels: categoryData?.map(item => item.label),\r\n//           datasets: [\r\n//             {\r\n//               label: \"Traffic\",\r\n//               data: categoryData?.map(item => item?.value),\r\n//               backgroundColor: [\r\n//                 \"rgba(34,139,34)\",\r\n//                 \"rgba(60,179,113)\",\r\n//                 \"rgba(183, 244, 216)\",\r\n//                 \"rgba(173,223,173)\",\r\n//                 \"rgba(46,139,87)\",\r\n//               ],\r\n//             },\r\n//           ],\r\n//         }}\r\n//         options={{\r\n//           legend: {\r\n//             position: \"left\",\r\n//             align: \"start\",\r\n//             labels: {\r\n//               padding: 20, \r\n//               padding:30,\r\n           \r\n//               // Adjust the padding if needed\r\n//             },\r\n//           },\r\n//         }}\r\n//       />    </div>\r\n//   )\r\n// }\r\n\r\n// export default Pai\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TEChart } from \"tw-elements-react\";\r\n\r\nconst Pai = () => {\r\n  const [categoryData, setCategoryData] = useState([]);\r\n\r\n  const fetchdata = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/api/pie-chart\");\r\n      if (response) {\r\n        setCategoryData(response?.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err, \"error fetching data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='bg-white  rounded-l-md rounded-r-md  shadow-lg h-full' >\r\n      <TEChart height={\"92%\"}\r\n        type=\"pie\"\r\n        data={{\r\n          labels: categoryData?.map(item => item.label),\r\n          datasets: [\r\n            {\r\n              label: \"Traffic\",\r\n              data: categoryData?.map(item => item?.value),\r\n              backgroundColor: [\r\n                \"rgba(34,139,34)\",\r\n                \"rgba(60,179,113)\",\r\n                \"rgba(183, 244, 216)\",\r\n                \"rgba(173,223,173)\",\r\n                \"rgba(46,139,87)\",\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: {\r\n            position: \"left\",\r\n            align: \"start\",\r\n            labels: {\r\n             \r\n            },\r\n          },    \r\n          height: 300, \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pai;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,CAAC;MACvE,IAAID,QAAQ,EAAE;QACZF,eAAe,CAACE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,EAAE,qBAAqB,CAAC;IACzC;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eACpEb,OAAA,CAACF,OAAO;MAACgB,MAAM,EAAE,KAAM;MACrBC,IAAI,EAAC,KAAK;MACVP,IAAI,EAAE;QACJQ,MAAM,EAAEb,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;QAC7CC,QAAQ,EAAE,CACR;UACED,KAAK,EAAE,SAAS;UAChBX,IAAI,EAAEL,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,GAAG,CAACC,IAAI,IAAIA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,KAAK,CAAC;UAC5CC,eAAe,EAAE,CACf,iBAAiB,EACjB,kBAAkB,EAClB,qBAAqB,EACrB,mBAAmB,EACnB,iBAAiB;QAErB,CAAC;MAEL,CAAE;MACFC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE,OAAO;UACdV,MAAM,EAAE,CAER;QACF,CAAC;QACDF,MAAM,EAAE;MACV;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAnDKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}