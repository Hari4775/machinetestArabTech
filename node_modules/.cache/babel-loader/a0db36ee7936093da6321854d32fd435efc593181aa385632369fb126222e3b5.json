{"ast":null,"code":"var _jsxFileName = \"C:\\\\machine test\\\\ARAB INDUSTRY\\\\client\\\\src\\\\Components\\\\ContentData\\\\Graph.jsx\",\n  _s = $RefreshSig$();\n// import axios from 'axios'\n// import React, { useEffect, useState } from 'react'\n// import { TEChart } from \"tw-elements-react\";\n\n// const Graph = () => {\n\n//     const [data,setData] = useState([])\n//     console.log(data,\"dtaa\")\n\n//     const tableData = async ()=>{\n//         try{\n//             const response = await axios.get(\"http://localhost:3001/api/graph\")\n//             setData(response.data);\n//         }catch(error){\n//             console.log(error,\"data fetching error\")\n//         }\n//     }\n\n//     useEffect(()=>{\n//      tableData()\n//     },[])\n\n//   return (\n//     <div className='bg-white graph ml-4 rounded-l-lg rounded-r-lg w-3/5 shadow-lg ' >\n//          <TEChart  className='TEChart'\n//       type=\"line\"\n//       data={{\n//         labels: data?.map((item)=>(item?.x)),\n//         datasets: [\n//           {\n//             label: \"Traffic\",\n\n//             data:data?.map((item)=>(item?.y)),\n//           },\n//         ],\n//       }}\n//     />\n\n//     </div>\n//   )\n// }\n\n// export default Graph\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { TEChart } from \"tw-elements-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/graph\");\n      setData(response.data);\n    } catch (error) {\n      console.log(error, \"data fetching error\");\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white  ml-20 rounded-l-lg rounded-r-lg \",\n    style: {},\n    children: /*#__PURE__*/_jsxDEV(TEChart, {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      type: \"line\",\n      data: {\n        labels: data === null || data === void 0 ? void 0 : data.map(item => item === null || item === void 0 ? void 0 : item.x),\n        datasets: [{\n          label: \"Traffic\",\n          data: data === null || data === void 0 ? void 0 : data.map(item => item === null || item === void 0 ? void 0 : item.y)\n        }]\n      },\n      options: {\n        // Adjust the height here\n        // For example, setting the height to 300 pixels\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["axios","React","useEffect","useState","TEChart","jsxDEV","_jsxDEV","Graph","_s","data","setData","fetchData","response","get","error","console","log","className","style","children","height","width","type","labels","map","item","x","datasets","label","y","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/machine test/ARAB INDUSTRY/client/src/Components/ContentData/Graph.jsx"],"sourcesContent":["// import axios from 'axios'\r\n// import React, { useEffect, useState } from 'react'\r\n// import { TEChart } from \"tw-elements-react\";\r\n\r\n \r\n\r\n// const Graph = () => {\r\n\r\n//     const [data,setData] = useState([])\r\n//     console.log(data,\"dtaa\")\r\n\r\n//     const tableData = async ()=>{\r\n//         try{\r\n//             const response = await axios.get(\"http://localhost:3001/api/graph\")\r\n//             setData(response.data);\r\n//         }catch(error){\r\n//             console.log(error,\"data fetching error\")\r\n//         }\r\n//     }\r\n\r\n//     useEffect(()=>{\r\n//      tableData()\r\n//     },[])\r\n\r\n//   return (\r\n//     <div className='bg-white graph ml-4 rounded-l-lg rounded-r-lg w-3/5 shadow-lg ' >\r\n//          <TEChart  className='TEChart'\r\n//       type=\"line\"\r\n//       data={{\r\n//         labels: data?.map((item)=>(item?.x)),\r\n//         datasets: [\r\n//           {\r\n//             label: \"Traffic\",\r\n            \r\n//             data:data?.map((item)=>(item?.y)),\r\n//           },\r\n//         ],\r\n//       }}\r\n//     />\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Graph\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TEChart } from \"tw-elements-react\";\r\n\r\nconst Graph = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/api/graph\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.log(error, \"data fetching error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='bg-white  ml-20 rounded-l-lg rounded-r-lg ' style={{}}>\r\n      <TEChart style={{height:\"100%\",width:\"100%\"}}\r\n        type=\"line\"\r\n        data={{\r\n          labels: data?.map(item => item?.x),\r\n          datasets: [\r\n            {\r\n              label: \"Traffic\",\r\n              data: data?.map(item => item?.y),\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          // Adjust the height here\r\n          // For example, setting the height to 300 pixels\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC;MACnEH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,EAAE,qBAAqB,CAAC;IAC3C;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,4CAA4C;IAACC,KAAK,EAAE,CAAC,CAAE;IAAAC,QAAA,eACpEb,OAAA,CAACF,OAAO;MAACc,KAAK,EAAE;QAACE,MAAM,EAAC,MAAM;QAACC,KAAK,EAAC;MAAM,CAAE;MAC3CC,IAAI,EAAC,MAAM;MACXb,IAAI,EAAE;QACJc,MAAM,EAAEd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG,CAACC,IAAI,IAAIA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,CAAC,CAAC;QAClCC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,SAAS;UAChBnB,IAAI,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,GAAG,CAACC,IAAI,IAAIA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,CAAC;QACjC,CAAC;MAEL,CAAE;MACFC,OAAO,EAAE;QACP;QACA;MAAA;IACA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA1B,EAAA,CApCKD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}